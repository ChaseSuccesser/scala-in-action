RemoteConf {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

LocalConf {
  my-dispatcher {
    mailbox-type = com.ligx.mailbox.CustomMailType
  }

  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
  }
}

kafka.consumer {
  zookeeper.connect = "ukafka-u5qna5-1-bj03.service.ucloud.cn:2181"   // 测试
//  zookeeper.connect = "10.10.221.163:2181"                              // 线上
  group.id = "order-group-akka"
  zookeeper.session.timeout.ms = "5000"    // ZooKeeper session timeout. If the consumer fails to heartbeat to ZooKeeper for this period of time it is considered dead and a rebalance will occur.
  zookeeper.sync.time.ms = "1000"   // How far a ZK follower can be behind a ZK leader
  zookeeper.connection.timeout.ms = "10000"
  auto.commit.interval.ms = "5000"
  auto.commit.enable = "true"
  auto.offset.reset = "smallest"
  consumer.timeout.ms = "400"  // Throw a timeout exception to the consumer if no message is available for consumption after the specified interval (default = -1 - blocking)
}

kafka.producer {
//  bootstrap.servers = "ukafka-u5qna5-1-bj03.service.ucloud.cn:9092,ukafka-u5qna5-2-bj03.service.ucloud.cn:9092,ukafka-u5qna5-3-bj03.service.ucloud.cn:9092"
  bootstrap.servers = "10.10.221.163:9092,10.10.227.205:9092,10.10.241.13:9092"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  retries = "2"                   // default=0
  acks = "1"                      // default=1
  compression.type = "gzip"       // default=none (none / gzip / snappy)
  batch.size = "16384"            // default=16384
  metadata.fetch.timeout.ms = "1000"
  block.on.buffer.full = "false"
  request.timeout.ms = "10000"
}


cluster-example {
  actor {
    provide = cluster
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }
  cluster {
    seed-modes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"
    ]
  }

  # Disable legacy metrics in akka-cluster.
  akka.cluster.metrics.enabled=off

  # Enable metrics extension in akka-cluster-metrics.
  akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

  # Sigar native library extract location during tests.
  # Note: use per-jvm-instance folder when running multiple jvm on one host.
  akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
}

